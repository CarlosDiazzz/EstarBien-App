/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import control.AdmDatos;
import control.UsuarioJpaController;
import java.awt.CardLayout;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import modelo.Usuario;

/**
 *
 * @author carlo
 */
public class PanelInicioSesion extends javax.swing.JPanel {

    private UsuarioJpaController usuarioControler;
    private AdmDatos admDatos = new AdmDatos();

    /**
     * Creates new form PanelInicioSesion
     */
    public PanelInicioSesion() {
        initComponents();
        usuarioControler = new UsuarioJpaController(admDatos.getEmf());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        usuarioField = new javax.swing.JTextField();
        contrasenaField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        adminBox = new javax.swing.JCheckBox();
        pacienteBox = new javax.swing.JCheckBox();
        medicoBox = new javax.swing.JCheckBox();

        setMaximumSize(new java.awt.Dimension(1397, 882));
        setMinimumSize(new java.awt.Dimension(1397, 882));
        setPreferredSize(new java.awt.Dimension(1397, 882));

        usuarioField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario");

        jLabel2.setText("Contraseña");

        btnLogin.setText("Iniciar Sesion");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        buttonGroup1.add(adminBox);
        adminBox.setText("Administrador");

        buttonGroup1.add(pacienteBox);
        pacienteBox.setText("Paciente");

        buttonGroup1.add(medicoBox);
        medicoBox.setText("Medico");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(581, 581, 581)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pacienteBox)
                    .addComponent(adminBox)
                    .addComponent(medicoBox)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contrasenaField)
                        .addComponent(usuarioField)))
                .addContainerGap(636, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(pacienteBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adminBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(medicoBox)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contrasenaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin)
                .addContainerGap(441, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
            String usuario = usuarioField.getText();
    String contrasena = new String(contrasenaField.getPassword());

    if (usuario.isEmpty() || contrasena.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Usuario y contraseña son requeridos", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar rol seleccionado
    String rolSeleccionado = null;
    if (adminBox.isSelected()) {
        rolSeleccionado = "administrador";
    } else if (pacienteBox.isSelected()) {
        rolSeleccionado = "paciente";
    } else if (medicoBox.isSelected()) {
        rolSeleccionado = "medico";
    } else {
        JOptionPane.showMessageDialog(this, "Por favor selecciona un rol", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Usuario usuarioAutenticado = autenticarUsuario(usuario, contrasena);

    if (usuarioAutenticado != null) {
        if (!usuarioAutenticado.getRol().equalsIgnoreCase(rolSeleccionado)) {
            JOptionPane.showMessageDialog(this, "El usuario no pertenece al rol seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mostrar mensaje de inicio de sesión exitoso
        JOptionPane.showMessageDialog(this, "Inicio de sesión exitoso", "Éxito", JOptionPane.INFORMATION_MESSAGE);

        // Acceso autorizado: cambiar de panel
        java.awt.Container parent = this.getParent();
        if (parent != null) {
            CardLayout cl = (CardLayout) parent.getLayout();
            
            // Primero actualiza el PanelConfiguracion
            for (java.awt.Component comp : parent.getComponents()) {
                if (comp instanceof PanelConfiguracion) {
                    PanelConfiguracion panelConfig = (PanelConfiguracion) comp;
                    panelConfig.mostrarBienvenida(usuarioAutenticado);
                    break;
                }
            }
            
            // Luego muestra el panel
            cl.show(parent, "configuracion");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void usuarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioFieldActionPerformed
        // TODO add your handling code here:
        usuarioField.setText("");
    }//GEN-LAST:event_usuarioFieldActionPerformed
    private Usuario autenticarUsuario(String nombreUsuario, String contrasena) {
        EntityManager em = admDatos.getEmf().createEntityManager();
        try {
            Query query = em.createQuery(
                    "SELECT u FROM Usuario u WHERE u.nombreUsuario = :usuario AND u.contrasena = :contrasena");
            query.setParameter("usuario", nombreUsuario);
            query.setParameter("contrasena", contrasena);

            List<Usuario> usuarios = query.getResultList();
            return usuarios.isEmpty() ? null : usuarios.get(0);
        } finally {
            em.close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox adminBox;
    private javax.swing.JButton btnLogin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPasswordField contrasenaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox medicoBox;
    private javax.swing.JCheckBox pacienteBox;
    private javax.swing.JTextField usuarioField;
    // End of variables declaration//GEN-END:variables
}
